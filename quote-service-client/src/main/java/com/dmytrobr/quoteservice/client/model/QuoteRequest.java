/**
 * Quote Service API
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.dmytrobr.quoteservice.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * QuoteRequest
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-12-10T11:37:27.055-05:00")
public class QuoteRequest   {
  @SerializedName("action")
  private String action = null;

  @SerializedName("base_currency")
  private String baseCurrency = null;

  @SerializedName("quote_currency")
  private String quoteCurrency = null;

  @SerializedName("amount")
  private String amount = null;

  public QuoteRequest action(String action) {
    this.action = action;
    return this;
  }

   /**
   * Either “buy” or “sell”
   * @return action
  **/
  @ApiModelProperty(example = "null", value = "Either “buy” or “sell”")
  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }

  public QuoteRequest baseCurrency(String baseCurrency) {
    this.baseCurrency = baseCurrency;
    return this;
  }

   /**
   * The currency to be bought or sold
   * @return baseCurrency
  **/
  @ApiModelProperty(example = "null", value = "The currency to be bought or sold")
  public String getBaseCurrency() {
    return baseCurrency;
  }

  public void setBaseCurrency(String baseCurrency) {
    this.baseCurrency = baseCurrency;
  }

  public QuoteRequest quoteCurrency(String quoteCurrency) {
    this.quoteCurrency = quoteCurrency;
    return this;
  }

   /**
   * The currency to quote the price in
   * @return quoteCurrency
  **/
  @ApiModelProperty(example = "null", value = "The currency to quote the price in")
  public String getQuoteCurrency() {
    return quoteCurrency;
  }

  public void setQuoteCurrency(String quoteCurrency) {
    this.quoteCurrency = quoteCurrency;
  }

  public QuoteRequest amount(String amount) {
    this.amount = amount;
    return this;
  }

   /**
   * The amount of the base currency to be traded
   * @return amount
  **/
  @ApiModelProperty(example = "null", value = "The amount of the base currency to be traded")
  public String getAmount() {
    return amount;
  }

  public void setAmount(String amount) {
    this.amount = amount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QuoteRequest quoteRequest = (QuoteRequest) o;
    return Objects.equals(this.action, quoteRequest.action) &&
        Objects.equals(this.baseCurrency, quoteRequest.baseCurrency) &&
        Objects.equals(this.quoteCurrency, quoteRequest.quoteCurrency) &&
        Objects.equals(this.amount, quoteRequest.amount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, baseCurrency, quoteCurrency, amount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QuoteRequest {\n");
    
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    baseCurrency: ").append(toIndentedString(baseCurrency)).append("\n");
    sb.append("    quoteCurrency: ").append(toIndentedString(quoteCurrency)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

